import streamlit as st
import requests
import pandas as pd
import fundamentus as fd

st.set_page_config(page_title='Magic Formula', 
                   page_icon='üéØ',
                   layout='wide')
st.title('Magic Formula')
st.write("""Em 'The Little Book That Beats the Market' (A F√≥rmula M√°gica de Joel Greenblatt para bater o mercado de a√ß√µes, tradu√ß√£o para o Brasil), Joel Greenblatt compartilha uma estrat√©gia de investimento que desafia a sabedoria convencional de Wall Street. Sua abordagem gira em torno da chamada "f√≥rmula m√°gica", uma f√≥rmula simples que utiliza dois crit√©rios-chave para selecionar a√ß√µes. 
         O primeiro √© o Rendimento de Lucros (Earning Yield), que mede o qu√£o baratas as a√ß√µes s√£o em rela√ß√£o aos lucros que geram. 
         O segundo √© o Retorno sobre o Capital (Return on Capital), que avalia a efic√°cia das empresas na aloca√ß√£o de capital.
         Greenblatt argumenta que, ao classificar as a√ß√µes com base nesses crit√©rios e investir nas melhores classificadas, os investidores podem superar consistentemente o desempenho do mercado. Uma das grandes vantagens dessa estrat√©gia √© sua simplicidade. Mesmo investidores iniciantes podem entender e aplicar a f√≥rmula m√°gica com facilidade.""")
st.write("""O autor tamb√©m enfatiza a import√¢ncia de manter uma perspectiva de longo prazo. Ele destaca que, embora a estrat√©gia possa n√£o funcionar bem a cada trimestre ou ano, ao longo de v√°rios anos, ela tende a superar o mercado de forma impressionante. Greenblatt sustenta essa afirma√ß√£o ao fornecer uma s√©rie de exemplos hist√≥ricos de sucesso da f√≥rmula m√°gica.
         No entanto, ele tamb√©m faz quest√£o de alertar que nenhum m√©todo de investimento √© infal√≠vel e que os investidores ainda enfrentam riscos. A estrat√©gia de Greenblatt n√£o se concentra na diversifica√ß√£o, o que significa que os investidores podem estar expostos a riscos espec√≠ficos de empresas individuais.
         Em resumo, 'The Little Book That Beats the Market' oferece uma abordagem clara e acess√≠vel para investir com sabedoria, baseada na sele√ß√£o de a√ß√µes de empresas de qualidade a pre√ßos atrativos. √â uma estrat√©gia que se baseia em princ√≠pios s√≥lidos, mas que requer disciplina e paci√™ncia para ser eficaz a longo prazo. O livro √© uma leitura valiosa para investidores interessados em uma abordagem diferente e potencialmente lucrativa para o mercado de a√ß√µes.""")
st.write("""Eu fiz quest√£o de adaptar a F√≥rmula M√°gica para o mercado brasileiro e deixar de forma ainda mais simples a obten√ß√£o das a√ß√µes de acordo com os crit√©rios do livro.
         Lembrando que os ativos aqui listados n√£o s√£o recomenda√ß√£o de invesitmentos.""")
st.write("""Altere os crit√©rios abaixo conforme sua vontade, os valores padr√µes j√° consideram o recomendado no livro.""")

liquidez = st.slider('Qual a liquidez m√≠nima desejada? (Ideal maior que 1.000.000)', 100000, 5000000, value=1000000, step=100000)
qtd_ativos = st.slider('Quantos ativos voc√™ deseja no Ranking Final?', 3, 30, value=15)

botao = st.button('Bot√£o M√°gico')
    
if botao:
    with st.spinner('Gerando o ranking da Magic Formula...'):    
        url = 'http://www.fundamentus.com.br/resultado.php'
        header = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"}
        r = requests.get(url, headers=header)
        tabela = pd.read_html(r.text,  decimal=',', thousands='.')[0]
        
        for coluna in ['Div.Yield', 'Mrg Ebit', 'Mrg. L√≠q.', 'ROIC', 'ROE', 'Cresc. Rec.5a']:
            tabela[coluna] = tabela[coluna].str.replace('.', '')
            tabela[coluna] = tabela[coluna].str.replace(',', '.')
            tabela[coluna] = tabela[coluna].str.rstrip('%').astype('float') / 100
        
        
        tabela = tabela[['Papel', 'Cota√ß√£o', 'EV/EBIT', 'ROIC', 'Liq.2meses', 'P/L']]
        tabela['Empresa'] = tabela['Papel'].str[:4]
        tabela = tabela.drop_duplicates(subset='Empresa')
        tabela = tabela.set_index('Papel')
        tabela = tabela[tabela['Liq.2meses'] > liquidez]
        tabela = tabela[tabela['P/L'] > 0]
        tabela = tabela[tabela['EV/EBIT'] > 0]
        tabela = tabela[tabela['ROIC'] > 0]
        tabela = tabela.drop(columns = ['Empresa', 'P/L', 'Liq.2meses'])
        tabela['RANKING_EV/EBIT'] = tabela['EV/EBIT'].rank(ascending = True)
        tabela['RANKING_ROIC'] = tabela['ROIC'].rank(ascending = False)
        tabela['RANKING_TOTAL'] = tabela['RANKING_EV/EBIT'] + tabela['RANKING_ROIC']
        tabela = tabela.sort_values('RANKING_TOTAL')
        tabela = tabela.head(qtd_ativos)
            
        ranking = tabela.index
        ranking = '\n'.join(f'{i+1}. {acao}' for i, acao in enumerate(ranking))
        st.markdown('**Ranking final da Magic Formula:**')
        
        
        def dados_ativo(papel):
            info_papel = fd.get_detalhes_papel(papel)
            st.write('**Empresa:**', info_papel['Empresa'][0])
            st.write('**Setor:**', info_papel['Setor'][0])
            st.write('**Segmento:**', info_papel['Subsetor'][0])
            st.markdown('---')
            st.write('**Cota√ß√£o:**', f"R$ {float(info_papel['Cotacao'][0]):,.2f}")
            st.write('**Data √öltima Cota√ß√£o:**', info_papel['Data_ult_cot'][0])
            st.write('**Liquidez M√©dia 2 Meses:**', info_papel['Vol_med_2m'][0])
            st.write('**EV/EBITDA:**', f"{float(info_papel['EV_EBITDA'][0])/100:,.2f}")
            st.write('**ROIC:**', info_papel['ROIC'][0])
            st.write('**Valor de Mercado:**', f"R$ {float(info_papel['Valor_de_mercado'][0]):,.2f}")
            st.write('**Patrim√¥nio L√≠quido:**', f"R$ {float(info_papel['Patrim_Liq'][0]):,.2f}")
            st.write('**Receita L√≠quida 12m:**', f"R$ {float(info_papel['Receita_Liquida_12m'][0]):,.2f}")
            st.write('**Lucro L√≠quido 12m:**', f"R$ {float(info_papel['Lucro_Liquido_12m'][0]):,.2f}")
            st.write('**D√≠vida Bruta:**', f"R$ {float(info_papel['Div_Bruta'][0]):,.2f}")
            st.write('**D√≠vida L√≠quida:**', f"R$ {float(info_papel['Div_Liquida'][0]):,.2f}")
            st.write('**P/L:**', f"{float(info_papel['PL'][0])/100:,.2f}")
            st.write('**P/VP:**', f"{float(info_papel['PVP'][0])/100:,.2f}")
            st.write('**Dividend Yield:**', info_papel['Div_Yield'][0])   
            st.write('**Margem Bruta:**', info_papel['Marg_Bruta'][0])  
            st.write('**Margem L√≠quida:**', info_papel['Marg_Liquida'][0]) 
            st.markdown('---') 
            st.write('**√öltimo Balan√ßo Processado:**', info_papel['Ult_balanco_processado'][0]) 
        
        col1, col2 = st.columns(2)
        with col1:
            for acao in tabela.index:
                with st.expander(acao, expanded=False):
                    dados_ativo(acao)